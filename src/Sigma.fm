type Sigma (A: Type) (B: A -> Type) {
  new(fst: A, snd: B(fst))
}

Sigma.fst<A: Type, B: A -> Type>(sig: Sigma(A, B)): A
  open sig
  sig.fst

Sigma.snd<A: Type, B: A -> Type>(sig: Sigma(A, B)): B(Sigma.fst<A,B>(sig))
  case sig {
    new: sig.snd
  }: B(Sigma.fst<A,B>(sig))

